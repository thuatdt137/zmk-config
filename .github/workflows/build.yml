on: [push, pull_request, workflow_dispatch]

name: Build

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:stable
    name: Build
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
    # Set always-auth in npmrc.
          always-auth: # optional, default is false
    # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
          node-version: # optional
    # File containing the version Spec of the version to use.  Examples: package.json, .nvmrc, .node-version, .tool-versions.
          node-version-file: # optional
    # Target architecture for Node to use. Examples: x86, x64. Will use system architecture by default.
          architecture: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec.
          check-latest: # optional
    # Optional registry to set up for auth. Will set the registry in a project level .npmrc and .yarnrc file, and set up auth to read in from env.NODE_AUTH_TOKEN.
          registry-url: # optional
    # Optional scope for authenticating against scoped registries. Will fall back to the repository owner when using the GitHub Packages registry (https://npm.pkg.github.com/).
          scope: # optional
    # Used to pull node distributions from node-versions. Since there's a default, this is typically not supplied by the user. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
          token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn, pnpm.
          cache: # optional
    # Used to specify the path to a dependency file: package-lock.json, yarn.lock, etc. Supports wildcards or a list of file names for caching multiple dependencies.
          cache-dependency-path: # optional

            - name: Autoupdater for dependencies (Node JS)
  # You may pin to the exact commit or the version.
  # uses: siarheidudko/autoupdater@c207b3037581fea0db9785c8dfaa0e9ffdab2e2c
  uses: siarheidudko/autoupdater@v3
  with:
    # Personal access token (PAT) used to fetch the repository. The PAT is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the PAT. We recommend using a service account with the least permissions necessary. Also when generating a new PAT, select the least scopes necessary. [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)

    token: # optional, default is ${{ github.token }}
    # Author's email of the commit.
    author-email: # optional, default is actions@github.com
    # Author's name of the commit.
    author-name: # optional, default is GitHUB Actions
    # Repository name with owner. For example, siarheidudko/autoupdater.
    ref: # optional, default is ${{ github.repository }}
    # Name of the branch.
    branch: # optional, default is master
    # Working directory.
    working-directory: # optional, default is ${{ github.workspace }}
    # Path to changelog file.
    changelog-file: # optional, default is ./CHANGELOG.md
    # Path to package.json file.
    package-file: # optional, default is ./package.json
    # Package manager (npm or yarn).
    package-manager: # optional, default is npm
    # Show debugging log.
    debug: # optional, default is false
    # Checks to be performed before the push.
    builds-and-checks: # optional
    # Package names that should not be updated.
    ignore-packages: # optional
          
          
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache west modules
        uses: actions/cache@v2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            modules/
            tools/
            zephyr/
            bootloader/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('manifest-dir/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: West Init
        run: west init -l config
      - name: West Update
        run: west update
      - name: West Zephyr export
        run: west zephyr-export
      - name: West Build (Sofle Left)
        run: west build -s zmk/app -b nice_nano_v2 -- -DSHIELD=sofle_left -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
      - name: Sofle Left Kconfig file
        run: cat build/zephyr/.config | grep -v "^#" | grep -v "^$"
      - name: Rename zmk.uf2
        run: cp build/zephyr/zmk.uf2 sofle_left_nice_nano_v2.uf2
      - name: Archive (Sofle Left)
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: sofle_left_nice_nano_v2.uf2
      - name: West Build (Sofle Right)
        run: west build --pristine -s zmk/app -b nice_nano_v2 -- -DSHIELD=sofle_right -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"

      - name: Sofle Right Kconfig file
        run: cat build/zephyr/.config | grep -v "^#" | grep -v "^$"
      - name: Rename zmk.uf2
        run: cp build/zephyr/zmk.uf2 sofle_right_nice_nano_v2.uf2
      - name: Archive (Sofle Right)
        uses: actions/upload-artifact@v2
        with:
          name: firmware
          path: sofle_right_nice_nano_v2.uf2
